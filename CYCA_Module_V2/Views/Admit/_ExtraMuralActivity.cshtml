@model CYCA_Module_V2.Common_Objects.CYCAAdmissionExtraMuralActivityViewModel


<div class="tablereload">
    <div class="row col-md-12" id="ExtraMuralGrid">
        <div class="col-md-12">
            <button class="btn btn-primary pull-left enabledisable" id="accordion" data-parent="#accordion" href="#actionModal" onclick="showNew()"><i class="fa fa-plus"></i> Add Activity</button>
            <div class="panel panel-default">
                <br /><br />
                <div class="panel-heading text-center">
                    <strong style="color:#158cba">Physical Appearance & Extra Mural Activities</strong>
                </div>
                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover mytable" id="extramuraltable">
                            <thead>
                                <tr>
                                    <th>&nbsp;</th>
                                    <th>Physical Build</th>
                                    <th>Eye Color</th>
                                    <th>Hair Color</th>
                                    <th>Hobby Name</th>
                                    <th>Sport Activity</th>
                                    <th>&nbsp;</th>
                                    <th>&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody class="mytable" id="setExtraMuralList"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row col-md-12 col-sm-12" id="AddActivity">
    <div class="col-md-12 col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading text-center">
                <strong style="color:#158cba">New Physical Appearance & Extra Mural Activity</strong>
            </div>
            <div class="panel-body">
                <form id="myForm">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.HiddenFor(m => m.Person_Id, new { @id = "id" })
                            @Html.HiddenFor(m => m.Admission_Id, new { @id = "Admission_Id" })
                            @Html.LabelFor(x => x.Weight)
                        </div>
                        <div class="col-md-2 form-group" style="">                           
                            @Html.TextBoxFor(m => m.Weight, new { @id = "Weight", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedPhysicalBuild)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.DropDownListFor(m => m.Physical_Build_Id, ViewBag.PhysicalBuildList as SelectList, "--Select--", new { @id = "Physical_Build_Id", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Physical_Build_Id, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedHairColor)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.DropDownListFor(m => m.Hair_Color_Id, ViewBag.HairColorList as SelectList, "--Select--", new { @id = "Hair_Color_Id", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Hair_Color_Id, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedEyeColor)
                        </div>
                        <div class="col-md-2 form-group">
                            @Html.DropDownListFor(m => m.Eye_Color_Id, ViewBag.EyeColorList as SelectList, "--Select--", new { @id = "Eye_Color_Id", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Eye_Color_Id, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedHobby, new { @class = "required" })
                        </div>
                        <div class="col-md-2 form-group">                         
                            @Html.ListBoxFor(m => m.Hobby_Id, ViewBag.ChildHobbyList as MultiSelectList, new { @id = "Hobby_Id", @class = "form-control multiselectDropDown", multiple = "multiple" })
                            @Html.ValidationMessageFor(m => m.Hobby_Id, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedSportActivity, new { @class = "required" })
                        </div>
                        <div class="col-md-2 form-group">
                            @*@Html.DropDownListFor(m => m.Activity_Id, ViewBag.SportActivityList as SelectList, "--Select--", new { @id = "Activity_Id", @class = "form-control" })*@
                            @Html.ListBoxFor(m => m.Activity_Id, ViewBag.SportActivityList as MultiSelectList, new { @id = "Activity_Id", @class = "form-control multiselectDropDown", multiple = "multiple" })
                            @Html.ValidationMessageFor(m => m.Activity_Id, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.Additional_Description)
                        </div>
                        <div class="col-md-4 form-group">
                            @Html.TextAreaFor(m => m.Additional_Description, new { @id = "Additional_Description", @class = "form-control" })                            
                        </div>

                        <div class="col-md-4">

                        </div>
                        <div class="col-md-2 form-group">
                            <a href="#" class="btn btn-info" style="background-color:#158cba; border-color: #158cba;" id="Insert">Save</a>
                            <a href="#" class="btn btn-default" id="close">Cancel</a>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="row col-md-12 col-sm-12" id="EditActivity">
    <div class="col-md-12 col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading text-center">
                <strong style="color:#158cba">Edit Physical Appearance & Extra Mural Activity</strong>
            </div>
            <div class="panel-body">
                <form id="myForm1">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.HiddenFor(m => m.Person_Id, new { @id = "id1" })
                            @Html.HiddenFor(m => m.Admission_Id, new { @id = "Admission_Id1" })
                            @Html.HiddenFor(m => m.Extra_Mural_Activity_Id, new { @id = "Extra_Mural_Activity_Id" })
                            @Html.LabelFor(x => x.Weight)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.TextBoxFor(m => m.Weight, new { @id = "Weight1", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedPhysicalBuild)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.DropDownListFor(m => m.Physical_Build_Id, ViewBag.PhysicalBuildList as SelectList, "--Select--", new { @id = "Physical_Build_Id1", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Physical_Build_Id, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedHairColor)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.DropDownListFor(m => m.Hair_Color_Id, ViewBag.HairColorList as SelectList, "--Select--", new { @id = "Hair_Color_Id1", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Hair_Color_Id, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedEyeColor)
                        </div>
                        <div class="col-md-2 form-group">
                            @Html.DropDownListFor(m => m.Eye_Color_Id, ViewBag.EyeColorList as SelectList, "--Select--", new { @id = "Eye_Color_Id1", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Eye_Color_Id, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedHobby)
                        </div>
                        <div class="col-md-2 form-group">
                            @*@Html.DropDownListFor(m => m.Hobby_Id, ViewBag.ChildHobbyList as SelectList, "--Select--", new { @id = "Hobby_Id", @class = "form-control multiselectDropDown" })
        @Html.ValidationMessageFor(m => m.Hobby_Id, "", new { @class = "text-danger" })*@
                            @Html.ListBoxFor(m => m.Hobby_Id, ViewBag.ChildHobbyList as MultiSelectList, new { @id = "Hobby_Id1", @class = "form-control multiselectDropDown", multiple = "multiple" })
                            @Html.ValidationMessageFor(m => m.Hobby_Id, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedSportActivity, new { @class = "required" })
                        </div>
                        <div class="col-md-2 form-group">
                            @*@Html.DropDownListFor(m => m.Activity_Id, ViewBag.SportActivityList as SelectList, "--Select--", new { @id = "Activity_Id1", @class = "form-control" })*@
                            @Html.ListBoxFor(m => m.Activity_Id, ViewBag.SportActivityList as MultiSelectList, new { @id = "Activity_Id1", @class = "form-control multiselectDropDown", multiple = "multiple" })
                            @Html.ValidationMessageFor(m => m.Activity_Id, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.Additional_Description)
                        </div>
                        <div class="col-md-4 form-group">
                            @Html.TextAreaFor(m => m.Additional_Description, new { @id = "Additional_Description1", @class = "form-control" })
                        </div>

                        <div class="col-md-4">

                        </div>
                        <div class="col-md-2 form-group">
                            <a href="#" class="btn btn-info" style="background-color:#158cba; border-color: #158cba;" id="Edit">Save</a>
                            <a href="#" class="btn btn-default" id="closeEdit">Cancel</a>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="row col-md-12 col-sm-12" id="ViewActivity">
    <div class="col-md-12 col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading text-center">
                <strong style="color:#158cba">View Physical Appearance & Extra Mural Activity</strong>
            </div>
            <div class="panel-body">
                <form id="myForm1">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.HiddenFor(m => m.Person_Id, new { @id = "id2" })
                            @Html.HiddenFor(m => m.Admission_Id, new { @id = "Admission_Id2" })
                            @Html.HiddenFor(m => m.Extra_Mural_Activity_Id, new { @id = "Extra_Mural_Activity_Id2" })
                            @Html.LabelFor(x => x.Weight)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.TextBoxFor(m => m.Weight, new { @id = "Weight2", @class = "form-control", @readonly = "readonly" })                            
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedPhysicalBuild)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.DropDownListFor(m => m.Physical_Build_Id, ViewBag.PhysicalBuildList as SelectList, "--Select--", new { @id = "Physical_Build_Id2", @class = "form-control", @readonly = "readonly" })                          
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedHairColor)
                        </div>
                        <div class="col-md-2 form-group" style="">
                            @Html.DropDownListFor(m => m.Hair_Color_Id, ViewBag.HairColorList as SelectList, "--Select--", new { @id = "Hair_Color_Id2", @class = "form-control", @readonly = "readonly" })                           
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedEyeColor)
                        </div>
                        <div class="col-md-2 form-group">
                            @Html.DropDownListFor(m => m.Eye_Color_Id, ViewBag.EyeColorList as SelectList, "--Select--", new { @id = "Eye_Color_Id2", @class = "form-control", @readonly = "readonly" })                         
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedHobby)
                        </div>
                        <div class="col-md-2 form-group">
                            @*@Html.DropDownListFor(m => m.Hobby_Id, ViewBag.ChildHobbyList as SelectList, "--Select--", new { @id = "Hobby_Id2", @class = "form-control", @readonly = "readonly" })*@
                            @Html.ListBoxFor(m => m.Hobby_Id, ViewBag.ChildHobbyList as MultiSelectList, new { @id = "Hobby_Id2", @class = "form-control multiselectDropDown", multiple = "multiple", @readonly = "readonly" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(x => x.selectedSportActivity)
                        </div>
                        <div class="col-md-2 form-group">
                            @*@Html.DropDownListFor(m => m.Activity_Id, ViewBag.SportActivityList as SelectList, "--Select--", new { @id = "Activity_Id2", @class = "form-control", @readonly = "readonly" })*@
                            @Html.ListBoxFor(m => m.Activity_Id, ViewBag.SportActivityList as MultiSelectList, new { @id = "Activity_Id2", @class = "form-control multiselectDropDown", multiple = "multiple", @readonly = "readonly" })
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.Additional_Description)
                        </div>
                        <div class="col-md-4 form-group">
                            @Html.TextAreaFor(m => m.Additional_Description, new { @id = "Additional_Description2", @class = "form-control", @readonly = "readonly" })
                        </div>

                        <div class="col-md-4">

                        </div>
                        <div class="col-md-2 form-group">                        
                            <a href="#" class="btn btn-info" style="background-color:#158cba; border-color: #158cba;" id="closeView">Close</a>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>









<script>
    function populateExtraMuralTable() {
        $.getJSON('/Admit/GetExtraMuralList',
            function (json) {
                var tr;
                for (var i = 0; i < json.length; i++) {
                    tr = $('<tr/>');
                    tr.append("<td>" + json[i].Extra_Mural_Activity_Id + "</td>");
                    tr.append("<td>" + json[i].selectedPhysicalBuild + "</td>");
                    tr.append("<td>" + json[i].selectedEyeColor + "</td>");
                    tr.append("<td>" + json[i].selectedHairColor + "</td>");
                    tr.append("<td>" + json[i].selectedHobby + "</td>");
                    tr.append("<td>" + json[i].selectedSportActivity + "</td>");
                    tr.append("<td>" + "<a href='#' onclick = 'ShowView(" + json[i].Extra_Mural_Activity_Id + ")'  ><span></span> View</a>" + "</td>");
                    tr.append("<td>" + "<a href='#' class='enabledisable' onclick = 'ShowEdit(" + json[i].Extra_Mural_Activity_Id + ")'><span></span> Edit</a>" + "</td>");

                    $('#setExtraMuralList').append(tr);
                }
                $('#extramuraltable').DataTable({
                    columnDefs: [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        }],
                    "order": [[0, "desc"]],
                    "searching": false,
                    "info": false,
                    "paging": false

                });
                EnableDisableClass();
            });

    }

    $(document).ready(function () {
        $(".datepicker").datepicker({
            dateFormat: "dd M yy",
            minDate: new Date(),
            changeYear: true,
            onClose: function () {
                $(this).valid();
            }
        });

        $("#AddActivity").hide();
        $("#EditActivity").hide();
        $("#ViewActivity").hide();
        populateExtraMuralTable();
    })

    var url = window.location.pathname;
    var id = url.substring(url.lastIndexOf('/') + 1);
    

    function showNew() {
        $("#ExtraMuralGrid").hide();
        $("#AddActivity").show();

        //$(function () {
        //    $(".multiselectDropDown").chosen({
        //        disable_search: true
        //    });
        //});

    }

    $("#Insert").click(function () {
        if (!$('#myForm').valid()) {
            return false;
        }             
        $.confirm({
            title: 'Add Activity',
            content: 'Are you sure you want to save this?',
            buttons: {
                Yes: function () {
                    $('#setExtraMuralList tr').remove();   
                    $('#extramuraltable').DataTable().clear().destroy();
                    $.ajax({
                        type: "Post",
                        url: "/Admit/AddExtraMuralActivity",
                        data: {
                            Person_Id: id,
                            Admission_Id: $("#Admission_Id").val(),
                            Weight: $("#Weight").val(),
                            Physical_Build_Id: $("#Physical_Build_Id").val(),
                            Hair_Color_Id: $("#Hair_Color_Id").val(),
                            Eye_Color_Id: $("#Eye_Color_Id").val(),
                            Hobby_Id: $("#Hobby_Id").val(),
                            //Description: $("#Description").val(),
                            Activity_Id: $("#Activity_Id").val(),
                            Additional_Description: $("#Additional_Description").val()
                        },
                        success: function (result) {
                            $('.spinner').css('display', 'block');
                            setTimeout(function () {
                                $('.spinner').hide();
                            }, 10000);

                            populateExtraMuralTable();
                            
                            document.getElementById("myForm").reset();
                            $("#ExtraMuralGrid").show();
                            $("#AddActivity").hide();
                        },
                        error: function (xhr, ajaxOptions, error) {
                            alert(xhr.status);
                            alert('Error: ' + xhr.responseText);
                        }
                    })
                },
                No: function () {

                }
            }
        })

    })
    $("#close").click(function () {
        document.getElementById("myForm").reset();
        $("#AddActivity").hide();
        $("#ExtraMuralGrid").show();
    })

    function ShowEdit(Extra_Mural_Activity_Id) {
        $("#ExtraMuralGrid").hide();
        $("#AddActivity").hide();
        $("#ViewActivity").hide();     
        var url = "/Admit/GetActivitybyActivityId?ActivityId=" + Extra_Mural_Activity_Id;                 
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                console.log(data);
                var obj = JSON.parse(data);
                $("#Extra_Mural_Activity_Id").val(obj.Extra_Mural_Activity_Id); 
                $("#id1").val(obj.Person_Id); 
                $("#Admission_Id1").val(obj.Admission_Id);               
                $("#Weight1").val(obj.Weight);
                $("#Physical_Build_Id1").val(obj.Physical_Build_Id);
                $("#Hair_Color_Id1").val(obj.Hair_Color_Id);
                $("#Eye_Color_Id1").val(obj.Eye_Color_Id);
                $("#Hobby_Id1").val(obj.Hobby_Id);
                $("#Activity_Id1").val(obj.Activity_Id);
                $("#Additional_Description1").val(obj.Additional_Description);              
            }, error: function () { alert('something bad happened'); }
        })
        $("#EditActivity").show();
        //$(function () {
        //    $(".multiselectDropDown").chosen();
        //});
    }
    $("#Edit").click(function () {
        if (!$('#myForm1').valid()) {
            return false;
        }
        $.confirm({
            title: 'Edit Activity',
            content: 'Are you sure you want to save changes?',
            buttons: {
                Yes: function () {
                    $('#setExtraMuralList tr').remove(); 
                    $('#extramuraltable').DataTable().clear().destroy();
                    $.ajax({
                        type: "Post",
                        url: "/Admit/EditExtraMuralActivity",
                        data: {
                            Extra_Mural_Activity_Id: $("#Extra_Mural_Activity_Id").val(),
                            Person_Id: $("#id1").val(),
                            Admission_Id: $("#Admission_Id1").val(),
                            Weight: $("#Weight1").val(),
                            Physical_Build_Id: $("#Physical_Build_Id1").val(),
                            Hair_Color_Id: $("#Hair_Color_Id1").val(),
                            Eye_Color_Id: $("#Eye_Color_Id1").val(),
                            Hobby_Id: $("#Hobby_Id1").val(),
                            Activity_Id: $("#Activity_Id1").val(),
                            Additional_Description: $("#Additional_Description1").val(),
                            Return_Status_Id: $("#Return_Status_Id1").val(),
                            Date_Returnedd: $("#Date_Returned1").val(),
                            Returned_By: $("#Returned_By1").val(),
                            Reason_Not_Returned: $("#Reason_Not_Returned1").val(),
                            Quantity_Returned: $("#Quantity_Returned1").val()
                        },
                        success: function (result) {
                            //$('.profile-usermenu').html(result);
                            $('.spinner').css('display', 'block');
                            setTimeout(function () {
                                $('.spinner').hide();
                            }, 10000);
                            populateExtraMuralTable();
                            document.getElementById("myForm").reset();
                            $("#ExtraMuralGrid").show();
                            $("#EditActivity").hide();                   
                        },
                        error: function (xhr, ajaxOptions, error) {
                            alert(xhr.status);
                            alert('Error: ' + xhr.responseText);
                        }
                    })
                },
                No: function () {

                }
            }
        })
    })
    $("#closeEdit").click(function () {       
        $("#EditActivity").hide();
        $("#ExtraMuralGrid").show();
    })

    function ShowView(Extra_Mural_Activity_Id) {
        $("#ExtraMuralGrid").hide();
        $("#AddActivity").hide();
        $("#EditActivity").hide();

        var url = "/Admit/GetActivitybyActivityId?ActivityId=" + Extra_Mural_Activity_Id;
        $("#ViewActivity").show();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                console.log(data);
                var obj = JSON.parse(data);
                $("#Extra_Mural_Activity_Id2").val(obj.Extra_Mural_Activity_Id);
                $("#id2").val(obj.Person_Id);
                $("#Admission_Id2").val(obj.Admission_Id);
                $("#Weight2").val(obj.Weight);
                $("#Physical_Build_Id2").val(obj.Physical_Build_Id);
                $("#Hair_Color_Id2").val(obj.Hair_Color_Id);
                $("#Eye_Color_Id2").val(obj.Eye_Color_Id);
                $("#Hobby_Id2").val(obj.Hobby_Id);
                $("#Activity_Id2").val(obj.Activity_Id);
                $("#Additional_Description2").val(obj.Additional_Description);
            }, error: function () { alert('something bad happened'); }

        })

    }
    $("#closeView").click(function () {
        $("#ViewActivity").hide();
        $("#ExtraMuralGrid").show();
    })

    $(function () {
        jQuery.validator.unobtrusive.parse();
        jQuery.validator.unobtrusive.parse("#myForm");      
        jQuery.validator.unobtrusive.parse("#myForm1");
        EnableDisableClass();
    });
</script>